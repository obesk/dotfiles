---
# FIXME: lazygit is missing
- name: install dev dependencies from apt
  become: true
  apt:
    name:
      # building tools
      - x11-xkb-utils
      - build-essential
      - ninja-build 
      - gettext
      - cmake
      - unzip
      - curl 
      - gcc
      - g++
      - clang
      - pkg-config
      - libssl-dev
      - npm # requirement of mason.nvim
      - nodejs # requirement of mason.nvim
      # tools i actually use
      - fzf
      - bash-completion
      - tmux
      - git
      - htop
      - vagrant

- name: ensure conflicting packages are not installed
  become: true
  apt: 
    name:
      - neovim
      # maybe add rust ?

- name: download and install rustup
  shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustc"

# - name: ensure rustup is updated
#   shell: ./rustup update
#   args:
#     chdir: "{{ ansible_env.HOME }}/.cargo/bin/"
#   register: rustup_update_result
#   changed_when: "rustup_update_result.stdout.find('unchanged') == -1"

- name: install rust tools
  community.general.cargo:
    executable: "{{ ansible_env.HOME }}/.cargo/bin/cargo"
    name: 
      - ripgrep # better grep (dependency of telescope.nvim)
      - fd-find # better find (dependency of telescope.nvim)
      - exa # better ls
      - bat # better cat
      - bob-nvim # version manager for vim
      - starship # shell prompt
      - gitui # better lazygit ?
      # - wiki-tui 
      - speedtest-rs
      # - zellij # better tmux (?)
    locked: true

- name: install neovim stable with bob
  command: bob use stable
  args:
    chdir: "{{ ansible_env.HOME }}/.cargo/bin/"
    creates: "{{ ansible_env.HOME }}/.local/share/bob/nvim-bin/nvim"

# - name: generate bob bash completions
#   become: true
#   shell: bob complete bash > /etc/bash_completion.d/bob
#   args:
#     chdir: "{{ ansible_env.HOME }}/.cargo/bin/"
#     creates: /etc/bash_completion.d/bob


# GO SECTION
- name: install gvm dependencies
  become: true
  apt:
    name:
      - curl
      - git
      - mercurial
      - make
      - binutils
      - bison
      - gcc
      - build-essential

# installing gvm
- name: install gvm
  shell: bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
  args:
    creates: "{{ ansible_env.HOME }}/.gvm"
    executable: /bin/bash

- name: remove source line from bashrc 
  lineinfile: 
    line: '[[ -s "/home/obe/.gvm/scripts/gvm" ]] && source "/home/obe/.gvm/scripts/gvm"'
    path: "{{ ansible_env.HOME }}/.bashrc"
    state: absent

- name: installing latest stable release of go 
  shell: |
    source {{ ansible_env.HOME }}/.gvm/scripts/gvm
    gvm install go1.4 -B
    gvm use go1.4
    export GOROOT_BOOTSTRAP=$GOROOT
    gvm install go1.17.13
    gvm use go1.17.13
    export GOROOT_BOOTSTRAP=$GOROOT
    gvm install go1.20
    gvm use go1.20
    export GOROOT_BOOTSTRAP=$GOROOT
    latest_go_version=$(gvm listall | grep -oP 'go[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
    gvm install "$latest_go_version"
    gvm use "$latest_go_version" --default
  args:
    executable: /bin/bash

- name: install some go tools
  shell: |
    source {{ ansible_env.HOME }}/.gvm/scripts/gvm
    go install github.com/jesseduffield/lazygit@latest
  args:
      executable: /bin/bash

- name: install prerequisites
  become: true
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    update_cache: yes

- name: add Docker GPG key
  become: true
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: add Docker APT repository
  become: true
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
    state: present
    update_cache: yes

- name: install Docker
  become: true
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: ensure Docker is started and enabled
  become: true
  systemd:
    name: docker
    enabled: true
    state: started

- name: add user to the Docker group
  become: true
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes


# virtualbox 
- name: install prerequisites
  become: yes
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - fasttrack-archive-keyring
    state: present
    update_cache: yes


- name: Add Fast Track APT repository
  become: yes
  apt_repository:
    repo: deb https://fasttrack.debian.net/debian/ {{ ansible_distribution_release }}-fasttrack main contrib
    state: present
    update_cache: yes

- name: Add Backports repository
  become: yes
  apt_repository:
    repo: deb https://fasttrack.debian.net/debian-fasttrack/ bullseye-backports-staging main contrib
    state: present
    update_cache: yes

- name: Install VirtualBox from Fast Track
  become: yes
  apt:
    name:
      - virtualbox
      - virtualbox-ext-pack
      - virtualbox-guest-x11
      - dkms

